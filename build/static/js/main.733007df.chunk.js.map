{"version":3,"sources":["Abcjs.js","AutoGrid.js","Preview.js","DGrid.js","Appbar.js","Ctrpt.js","index.js"],"names":["Abcjs","abcNotation","parserParams","engraverParams","renderParams","abcjsObj","renderAbc","this","props","renderAbcNotation","id","style","width","PureComponent","defaultProps","responsive","viewportHorizontal","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","display","flexDirection","justifyContent","height","styled","div","AutoGrid","classes","React","useState","key","setkey","minor","setminor","cpclef","setcpclef","cfclef","setcfclef","cpnotes","setcpnotes","cfnotes","setcfnotes","abc","toLowerCase","className","Grid","container","item","xs","Paper","Typography","variant","title","FormControl","formControl","InputLabel","Select","labelId","value","onChange","event","target","split","map","clef","MenuItem","TextField","label","FormControlLabel","control","Checkbox","checked","name","color","notation","midiParams","qpm","Preview","src","controls","columns","field","type","rows","pass","Math","random","DataGridDemo","autoHeight","menuButton","marginRight","ButtonAppBar","AppBar","position","Toolbar","backButton","instructions","marginTop","marginBottom","getStepContent","stepIndex","HorizontalLabelPositionBelowStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","length","Button","onClick","disabled","prevActiveStep","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.733007df.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport abcjsObj from 'abcjs'\n\nclass Abcjs extends PureComponent {\n\n    renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams) {\n        const res = abcjsObj.renderAbc(\n            'id',\n            abcNotation,\n            parserParams,\n            engraverParams,\n            renderParams\n        )\n    }\n\n    componentDidMount() {\n        const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n        this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n    }\n\n    componentDidUpdate() {\n        const { abcNotation, parserParams, engraverParams, renderParams } = this.props\n        this.renderAbcNotation(abcNotation, parserParams, engraverParams, renderParams)\n    }\n\n    render() {\n        return (\n            <div id='id' style={{ width: '100%' }} />\n        )\n    }\n}\n\nAbcjs.propTypes = {\n    abcNotation: PropTypes.string,\n    parserParams: PropTypes.object,\n    engraverParams: PropTypes.object,\n    renderParams: PropTypes.object,\n}\n\nAbcjs.defaultProps = {\n    abcNotation: '',\n    parserParams: {},\n    engraverParams: { responsive: 'resize' },\n    renderParams: { viewportHorizontal: true },\n}\n\nexport default Abcjs","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, Typography, Paper, Grid, FormControlLabel, InputLabel, MenuItem, FormHelperText, FormControl, Select, TextField } from '@material-ui/core';\nimport styled from \"styled-components\";\n\nimport { Midi } from 'react-abc';\n\nimport Abcjs from './Abcjs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        height: '100%',\n    },\n}));\n\nconst MidiContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  border-radius: 0.2rem;\n  justify-content: center;\n  overflow: hidden;\n  min-height: 3rem;\n  width: 100%;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nexport default function AutoGrid() {\n    const classes = useStyles();\n    const [key, setkey] = React.useState('C');\n    const [minor, setminor] = React.useState(false);\n    const [cpclef, setcpclef] = React.useState('Treble');\n    const [cfclef, setcfclef] = React.useState('Treble');\n    const [cpnotes, setcpnotes] = React.useState('');\n    const [cfnotes, setcfnotes] = React.useState('');\n\n    const abc = `                    \nL:1/1\nK:${key + (minor ? 'm' : '')}\nV: 1 clef=${cfclef.toLowerCase()}\n${cfnotes}\nV: 2 clef=${cpclef.toLowerCase()}\n${cpnotes}\n    `\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Cantus Firmus\n                        </Typography>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                Clef\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                value={cfclef}\n                                onChange={(event) => setcfclef(event.target.value)}\n                            >\n                                {'Treble Alto Bass'.split(' ')\n                                    .map(clef => (\n                                        <MenuItem value={clef}>\n                                            {clef}\n                                        </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Notes\"\n                            onChange={(event) => setcfnotes(event.target.value)}\n                        />\n                    </Paper>\n                </Grid>\n\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Key\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            value={key}\n                            onChange={(event) => setkey(event.target.value)}\n                        >\n                            {'A, A#, Bb, B, C, C#, Db, D, D#, Eb, E, F, F#, Gb, G, G#'.split(', ').map(clef => (\n                        <MenuItem value={clef}>{clef}</MenuItem>\n\n                            ))}\n                        </Select>\n                    </Paper>\n                </Grid>\n            </Grid>\n        \n            <Grid container spacing={3}>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Counterpoint\n                        </Typography>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                Clef\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                value={cpclef}\n                                onChange={(event) => setcpclef(event.target.value)}\n                            >\n                                {'Treble Alto Bass'.split(' ')\n                                    .map(clef => (\n                                        <MenuItem value={clef}>\n                                            {clef}\n                                        </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Notes\"\n                            onChange={(event) => setcpnotes(event.target.value)}\n                        />\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={minor}\n                                    onChange={() => setminor(!minor)}\n                                    name=\"checkedB\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Minor Key\"\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n            \n            <br />\n            <Midi\n                notation={abc}\n                key={abc}\n                midiParams={{ qpm: 222 }}\n            />\n            <Abcjs abcNotation={abc} />\n        </div>\n    );\n}\n","import { Typography, Paper } from '@material-ui/core';\n\nexport default function Preview() {\n    return (\n        <Paper>\n            <img src='https://www.aboutmusictheory.com/wp-content/uploads/2012/04/counterpoint.png' />\n            \n            <br />\n            <br />\n\n            <audio controls />\n        </Paper>\n    );\n}","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n    { field: 'id' },\n    { field: 'pass', type: 'boolean' },\n    { field: 'label', width: 200 },\n    { field: 'notes' },\n]\n\nconst labels = [\n    'Harmonically good',\n    'Melodically good',\n    'Ranges good',\n    'One peak',\n    'Peaks are not at the same place',\n    'Cantus Firmus notes in key',\n    'CounterPoint notes in key',\n    'Cantus Firmus Linear',\n    'CounterPoint Linear',\n    'Motion of the Music',\n    'No Three Parallel Motion in a Row',\n    'Perfect Fifths & Octaves',\n    'Hidden Fifths & Octaves',\n    '7ths resolve',\n    'Leaps are followed by opposite direction',\n    'No voice-crossing',\n    'No voice-overlap',\n    'First interval is good',\n    'Last interval is good',\n];\n\nconst rows = labels.map((label, id) => {\n    const pass = Math.random() < 0.5;\n    return { label, id, pass };\n})\n\nexport default function DataGridDemo() {\n    return (\n        <DataGrid\n            rows={rows}\n            columns={columns}\n            autoHeight\n        />\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            Counterpoint Checker\n          </Typography>\n          <Typography variant=\"h6\">\n            Alex Beloiu, Yongwei Che, George Fane, Jason Zhang\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport AutoGrid from './AutoGrid';\nimport Preview from './Preview';\nimport DGrid from './DGrid';\nimport Appbar from './Appbar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(3),\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nfunction getSteps() {\n    return ['Input', 'Preview', 'Grade'];\n}\n\nfunction getStepContent(stepIndex) {\n    switch (stepIndex) {\n        case 0:\n            return <AutoGrid />;\n        case 1:\n            return <Preview />;\n        case 2:\n            return <DGrid />;\n        default:\n            return 'Unknown stepIndex';\n    }\n}\n\nexport default function HorizontalLabelPositionBelowStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div>\n            <Appbar />\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} alternativeLabel>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>All steps completed</Typography>\n                            <Button onClick={handleReset}>Reset</Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.backButton}\n                                >\n                                    Back\n                                </Button>\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                            <Typography\n                                className={classes.instructions}\n                                variant='h3'\n                            >\n                                {steps[activeStep]}\n                                {getStepContent(activeStep)}\n                            </Typography>\n                        </div>\n                    )}\n                </div>\n            </div>\n        \n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Ctrpt from './Ctrpt';\n\nReactDOM.render(\n    <Ctrpt />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}